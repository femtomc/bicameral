[project]
name = "bicamrl"
version = "0.1.0"
description = "Persistent memory and learning system for AI assistants via MCP"
authors = ["AI Memory Project <contact@example.com>"]
channels = ["conda-forge", "pytorch"]
platforms = ["osx-arm64", "linux-64", "osx-64"]

[tasks]
# Primary interface - TUI
bicamrl = { cmd = "python -m bicamrl.tui", depends-on = ["build"] }
tui = { depends-on = ["bicamrl"] }

# Core functionality
server = "python -m bicamrl"
init = "python -m bicamrl.cli init"
import = "python -m bicamrl.cli import"
export = "python -m bicamrl.cli export"

# Development
build = "maturin develop --release"
build-dev = "maturin develop"
format = "ruff format bicamrl && cargo fmt"
format-check = "ruff format --check bicamrl && cargo fmt -- --check"
lint = "ruff check bicamrl && cargo clippy -- -W warnings"
type-check = "pyright bicamrl && cargo check"
test = "python -m pytest tests/ -v && cargo test"
test-cov = "python -m pytest tests/ --cov=bicamrl --cov-report=term-missing --cov-report=html"
check = { depends-on = ["format", "lint", "type-check", "test"] }

# Rust-specific commands
cargo-check = "cargo check --all-targets"
cargo-clippy = "cargo clippy --all-targets -- -W warnings"
cargo-test = "cargo test --all"
cargo-fmt-check = "cargo fmt -- --check"

# Utilities
clean = "rm -rf .pytest_cache .coverage htmlcov .pyright build dist *.egg-info target"
install = "pip install -e ."

[dependencies]
python = ">=3.9,<3.13"
pip = "*"
aiosqlite = ">=0.19.0"
click = ">=8.0.0"
pydantic = ">=2.0.0"
aiohttp = ">=3.9.0"
numpy = ">=1.24.0"
rust = ">=1.70.0"
maturin = ">=1.0.0"

[pypi-dependencies]
mcp = { git = "https://github.com/modelcontextprotocol/python-sdk.git" }
textual = ">=0.47.0"
toml = ">=0.10.2"
claude-code-sdk = ">=0.0.1"

[feature.test.dependencies]
pytest = ">=7.0.0"
pytest-asyncio = ">=0.21.0"
pytest-cov = ">=4.0.0"
pytest-mock = ">=3.10.0"

[feature.dev.dependencies]
ruff = ">=0.1.0"
pyright = ">=1.1.0"
ipython = ">=8.0.0"
pre-commit = ">=3.0.0"


[environments]
default = ["test", "dev"]
prod = []
ci = ["test"]

# [activation]
# scripts = ["activate.sh"]
